formula = y ~ 1 + z
data = data.frame(y, z)
r = inla(formula, data = data,family = "betabinomial", Ntrials=Ntrials)
summary(r)
y <- rbeta(1000,2,2)
loglik <- function(mu, x) {
sum(-dbeta(x,mu[1],mu[2],log = TRUE))
}
out <- optim(par = c(1,1), fn=loglik,x=y,method = "L-BFGS-B",lower=c(0,0))
# http://www.apsnet.org/EDCENTER/ADVANCED/TOPICS/ECOLOGYANDEPIDEMIOLOGYINR/SPATIALANALYSIS/Pages/AdvancedDiscussionAndIllustration.aspx
tasmania <- read.table("http://www.apsnet.org/edcenter/advanced/topics/EcologyAndEpidemiologyInR/SpatialAnalysis/Documents/tasmania_test_1.txt",header=TRUE)
#### First, a binomial model will be fit to
#####    the data using the glm function
# The assumption here is a constant probability, such that
# counti ~ independent      Binomial(group_sizei, p), 1 = i = N
# Reference, Altham 2002
attach(tasmania) # This way, column headings may be
#   called out for analysis
names(tasmania) # What are those column headings?
#### Examine for potential overdispersion
####    using non-statistical methods
table(tasmania[,3]) #### notice how there are more
####    quadrats with 6 disease plants
binom.tas=glm(count/group_size~1,
family=binomial,
weights=group_size,data=tasmania)
summary(binom.tas)
tasmania
library(aods3)
data(orob2)
# various phi scales
fm <- aodml(cbind(m, n - m) ~ seed, data = orob2, family = "bb")
fm$phi
fm$phi.scale
install.packages("aods3")
library(aods3)
data(orob2)
# various phi scales
fm <- aodml(cbind(m, n - m) ~ seed, data = orob2, family = "bb")
fm$phi
fm$phi.scale
fm <- aodml(cbind(m, n - m) ~ seed, data = orob2, family = "bb")
?aodml
data(orob2)
fm1 <- aodml(cbind(m, n - m) ~ seed, data = orob2, family = "bb")
?aodml
aodml
setwd("~/Documents/dlee/GLM-BCAM/Curso Azti Mayo 2015/0 R Basics/R-code")
getwd()
rm(list=ls())
# Remove all the previous objects
rm(list=ls())
ls()
install.packages(c("lattice","ROCR","arm","AER","lattice",
"effects","Epi","ResourceSelection",
"scatterplot3d","splines","aod","MASS",
"ResourceSelection","mgcv",
"VGAM","nnet","mlogit","foreign","RColorBrewer",
"reshape2"))
library(splines)
weight<-c(60,72,57,90,95,72) # function c is used to concatenate data/numbers or vectors
weight
class(weight)
height<-c(1.75,1.80,1.65,1.90,1.74,1.91)
height
bmi<- weight/height^2
bmi
x <- scan(stdin())
x
rm(x) # remove x
ls()  # list of variables in the Workspace
mean(weight)
median(weight)
# summary of the vector
summary(weight)
sum(weight)
length(weight)
subject <- c("John","Peter","Chris","Tony","Mary","Jane")
sex <- c("MALE","MALE","MALE","MALE","FEMALE","FEMALE")
subject
class(subject)
length(subject)
mean(subject)
?read.table
Dat <- data.frame(subject,sex,weight,height)
Dat
dim(Dat)
str(Dat)
dim(Dat)  # dimension of the data.frame
ncol(Dat) # n. of columns
nrow(Dat) # n. of rows
dim(Dat)[1] # or similarly
dim(Dat)[2]
names(Dat)
colnames(Dat)
rownames(Dat)
rownames(Dat)<-c("A","B","C","D","E","F")
Dat[,1]     # 1st column
Dat
Dat[,1]
Dat[,2]
Dat[,1:2]
Dat[,1:3]
Dat[,c(1,3,5)]
Dat[,c(1,2,4)]
Dat
Dat[,c(1,2,4)]
Dat[,-3]
Dat
Dat[1:3,]
Dat
Dat[sex=="MALE"]
Dat[sex=="MALE",]
Dat[sex=="FEMALE"]
Dat[sex=="FEMALE",]
mean(Dat[sex=="MALE","weight"])
bmi
bmi>22
which(bmi>22)
bmi > 20 & bmi < 25
which(bmi > 20 & bmi < 25)
seq(1,9)
1:9
seq(1,9,by=1)
seq(1,9,length=20)
a <- c("Sometimes","Sometimes","Never","Always","Always","Sometimes","Sometimes","Never")
b <- c("Maybe","Maybe","Yes","Maybe","Maybe","No","Yes","No")
results <- table(a,b)
results
# Example: manually enter two way tables
sexsmoke<-matrix(c(70,120,65,140),ncol=2,byrow=TRUE)
rownames(sexsmoke)<-c("male","female")
colnames(sexsmoke)<-c("smoke","nosmoke")
sexsmoke <- as.table(sexsmoke)
sexsmoke
library(MASS)      # load the MASS package
painters
library(MASS)      # load the MASS package
painters
?painters
head(painters)
tail(painters)
names(painters)
painters$School
attach(painters)
School
school.absfreq<-table(School)                 # absolute frequency
school.absfreq
xtabs(~Expression,data=painters)
xtabs(~School+Expression,data=painters)
rm(list=ls()) # remove all objects
source("Rintro2.r")
setwd("~/Documents/dlee/GLM-BCAM/Curso Azti Mayo 2015/0 R Basics/R-code")
source("Rintro2.r")
barplot(school.absfreq)
barplot(school.absfreq, main = "Absolute Frequencies for School Categorical Variable", legend = rownames(School), border = "dark blue", col="light blue")
barplot(school.cumabsfreq, main = "Cumulative Abs Frequencies for School Categorical Variable", legend = rownames(School), border = "dark blue", col="light blue")
colors = c("red", "yellow", "green", "violet","orange", "blue", "pink", "cyan")
barplot(school.relfreq,col=colors)
library(RColorBrewer)
display.brewer.all()
colors2 <- brewer.pal(8,"Blues")
barplot(school.relfreq,col=colors2)
pie(school.relfreq,col=colors2)
x11()
pie(school.relfreq,col=colors2)
barplot(VADeaths)
barplot(VADeaths,beside=TRUE)
colors <- brewer.pal(5,"Greens")
barplot(VADeaths, beside = FALSE, col = colors,legend = rownames(VADeaths))
barplot(VADeaths, beside = TRUE, col = colors,legend = rownames(VADeaths))
title(main = "Death Rates in Virginia", font.main = 1)
par(mar = rep(0,4))
plot(c(-1, 26), 0:1, type = "n", axes = FALSE)
text(0:25, 0.6, 0:25, cex = 1.5)
points(0:25, rep(0.3, 26), pch = 0:25, bg = "grey",cex=1.5)
pow <-function(x,y=1){
out <- x^y # raise x to the power of y
return(out)
}
pow
x=c(1,2,3)
y=3
x^y
pow(x,y)
setwd("~/Documents/dlee/GLM-BCAM/Curso Azti Mayo 2015/1 Intro/R-code")
library(effects)
library(ResourceSelection)
library(Epi)
set.seed(1234)
library(Epi)
n <- 50
x <- seq(1,n)  # creates a sequence from 1 to n
x
x <- seq(1,n)  # creates a sequence from 1 to n
beta0 <- 15
beta1 <- 0.5
sigma <- 3 # standard deviation of the errors
eps <- rnorm(n,mean=0,sd=3) # generate gaussian random errors
# Generate random data
y <- beta0 + beta1*x  +  eps
plot(x,y,ylim = c(8,45), cex=1.3, xlab = "x", ylab="y")
x11()
plot(x,y,ylim = c(8,45), cex=1.3, xlab = "x", ylab="y")
# correlation between x and y
cor(x,y)
plot(x,y,ylim = c(8,45), cex=1.3, xlab = "x", ylab="y",pch=19)
x11()
plot(x,y,ylim = c(8,45), cex=1.3, xlab = "x", ylab="y",pch=19)
cor(x,7)
cor(x,y)
###################################################
### Linear regression fit
###################################################
# Using lm()
lin.mod <- lm(y~x)
lin.mod
coefficients(lin.mod)
###################################################
### summary()
###################################################
summary(lin.mod)
confint(lin.mod)
names(summary(lin.mod))
summary(lin.mod)$sigma
plot(x,y)
abline(lin.mod,lwd=2,col="red")
x11()
plot(x,y)
abline(lin.mod,lwd=2,col="red")
mod1 <- lm(y ~ x1 + x2 , data = df1)
###################################################
### plot data
###################################################
df1 = data.frame(x1,x2,y)
plot(df1)
###################################################
### Correlation matrix and model fit
###################################################
# correlation matrix
cor(df1)
# correlation between x1 and x2
cor(df1[,2:3])
# Linear Model fit
mod1 <- lm(y ~ x1 + x2 , data = df1)
getwd()
###################################################
### Multiple linear regression
###################################################
set.seed(1234)
n <- 100
x1 <- seq(11,30,l=n)
x2 <- runif(n,5,95)
alpha <- 15
beta1 <- 0.5
beta2 <- -0.3
sigma <- 1.3
eps <- rnorm(x1,0,sigma)
y <- alpha + beta1*x1  + beta2*x2 + eps
###################################################
### plot data
###################################################
df1 = data.frame(x1,x2,y)
plot(df1)
###################################################
### Correlation matrix and model fit
###################################################
# correlation matrix
cor(df1)
# correlation between x1 and x2
cor(df1[,2:3])
# Linear Model fit
mod1 <- lm(y ~ x1 + x2 , data = df1)
mod1
summary(mod1)
rm(list=ls())
rm(list=ls()) # Remove all previous variables
salud <- read.table("data/salud.txt",header=TRUE, dec=",")
class(salud)
dim(salud)
names(salud)
str(salud)
salud$g02     <- factor(salud$g02)
salud$sexo    <- factor(salud$sexo)
salud$con_tab <- factor(salud$con_tab)
salud$educa   <- factor(salud$educa)
salud$bebedor <- factor(salud$bebedor)
summary(salud)
str(salud)
รง
names(salud$g02)
levels(salud$g02)
levels(salud$g02)<-c("male","female")
levels(salud$g02)
levels(salud$bebedor)
salud$g02     <- factor(salud$g02)
salud$sexo    <- factor(salud$sexo)
attach(salud)
table(sexo)
table(con_tab)
xtabs(~sexo+bebedor,data=salud)
xtabs(~sexo+bebedor+con_tab,data=salud)
###################################################
### linear model with 2-way interactions of two factors
###################################################
modelo4 <- lm(imc~peso+sexo+sexo:peso+bebedor+bebedor:peso+sexo:bebedor)
summary(modelo4)
anova(modelo4)
# Polynomial regression
polymod <- lm(imc~poly(peso,degree=3,raw=FALSE))
summary(polymod)
# Or equivalently
polymod<-lm(imc~peso+I(peso^2)+I(peso^3)) # when in poly(...,raw=TRUE)
predict.polymod<-predict(polymod,data.frame(peso=peso.seq))
plot(peso,imc,col="grey")
lines(peso.seq,predict.polymod, lwd = 2, col = "blue")
###################################################
### fit a linear model
###################################################
modelo1 <- lm(imc ~ peso , data = salud)
modelo1
attributes(modelo1)
summary(modelo1)
###################################################
### Plot
###################################################
plot(peso,imc,xlab="Peso",ylab="IMC")
abline(modelo1,lwd=3,col=2)
###################################################
### Linear model with a factor variable
###################################################
modelo2 <- lm(imc~peso+sexo,data=salud)
summary(modelo2)
coefficients(modelo2)
###################################################
### get fitted values
###################################################
y.ajustados.mod2 <- fitted.values(modelo2)
###################################################
### obtain fitted values by factor variable
###################################################
peso.1=peso[sexo==1]
peso.2=peso[sexo==2]
y.hat.mod2.1=modelo2$coef[1]+modelo2$coef[2]*peso.1
y.hat.mod2.2=modelo2$coef[1]+modelo2$coef[2]*peso.2+modelo2$coef[3]
###################################################
### Predict
###################################################
# Create a regular sequence of values of length 100
peso.seq <- seq(min(peso),max(peso),l=100)
# Create a factor variable for each level of length 100
sexo1.seq <- as.factor(rep(1,l=100))
sexo2.seq <- as.factor(rep(2,l=100))
# Create new data frames to predict with lm
newdat1 = data.frame(data.frame(peso = peso.seq, sexo = sexo1.seq))
newdat2 = data.frame(data.frame(peso = peso.seq, sexo = sexo2.seq))
predict.mod2.male <- predict.lm(modelo2,newdat1)
predict.mod2.female <- predict.lm(modelo2,newdat2)
###################################################
### Plot fitted lines by factor sexo
###################################################
plot(peso,imc,xlab="Peso",ylab="IMC",col="grey",pch=19,cex=.5)
lines(peso.seq,predict.mod2.male,col="red",lwd=2,t='l')
lines(peso.seq,predict.mod2.female,col="blue",lwd =2,t='l')
legend("bottomright",c("Male","Female"),col=c("red","blue"),lwd=2)
###################################################
### compare both sexes fits
###################################################
par(mfrow=c(1,2))
plot(peso,imc,xlab="Peso",ylab="IMC",col="grey",cex=.3,pch=19,main="Males fit")
points(peso.1,imc[sexo==1],col="red",cex=.3)
lines(peso.seq,predict.mod2.male,col="black",lwd=2,t='l')
lines(peso.seq,predict.mod2.female,col="blue",lwd=2,t='l',lty=4)
plot(peso,imc,xlab="Peso",ylab="IMC",col="grey",cex=.3,pch=19,main="Females fit")
points(peso.2,imc[sexo==2],col="blue",cex=.3)
lines(peso.seq,predict.mod2.female,col="black",lwd =2,t='l')
lines(peso.seq,predict.mod2.male,col="red",lwd=2,t='l',lty=4)
###################################################
### linear model with interaction of a factor variable
###################################################
modelo3 <- lm(imc~peso+sexo+peso:sexo)
summary(modelo3)
###################################################
### predict values for each sex
###################################################
predict.mod3.male <- predict.lm(modelo3,newdat1)
predict.mod3.female <- predict.lm(modelo3,newdat2)
###################################################
### plot both fitted lines
###################################################
plot(peso,imc,xlab="Peso",ylab="IMC",col="grey",pch=19,cex=.5)
lines(peso.seq,predict.mod3.male,col="red",lwd=2,t='l')
lines(peso.seq,predict.mod3.female,col="blue",lwd =2,t='l')
legend("bottomright",c("Male","Female"),col=c("red","blue"),lwd=2)
###################################################
### linear model with 2-way interactions of two factors
###################################################
modelo4 <- lm(imc~peso+sexo+sexo:peso+bebedor+bebedor:peso+sexo:bebedor)
###################################################
### ANOVA of a fitted model
###################################################
anova(modelo4)
###################################################
### Likelihood Ratio Test with anova()
###################################################
modelo5 <- lm(imc~peso+sexo+peso:sexo+bebedor+bebedor:peso)
anova(modelo5,modelo4)
###################################################
### Test for variable selection
###################################################
library(MASS)
dropterm(modelo4,test="F")
###################################################
###Beyond  linear models
###################################################
# Polynomial regression
polymod <- lm(imc~poly(peso,degree=3,raw=FALSE))
summary(polymod)
# Or equivalently
polymod<-lm(imc~peso+I(peso^2)+I(peso^3)) # when in poly(...,raw=TRUE)
predict.polymod<-predict(polymod,data.frame(peso=peso.seq))
plot(peso,imc,col="grey")
lines(peso.seq,predict.polymod, lwd = 2, col = "blue")
x11()
plot(peso,imc,col="grey")
lines(peso.seq,predict.polymod, lwd = 2, col = "blue")
# Exponential fit
expmod <- lm(log(imc)~peso)
summary(expmod)
predict.expmod<-predict(expmod,data.frame(peso=peso.seq))
par(mfrow=c(1,2))
plot(peso,log(imc),col="grey")
lines(peso.seq,predict.expmod, lwd = 2, col = "darkgreen")
plot(peso,imc,col="grey")
lines(peso.seq,exp(predict.expmod), lwd = 2, col = "darkgreen")
x11()
# Exponential fit
expmod <- lm(log(imc)~peso)
summary(expmod)
predict.expmod<-predict(expmod,data.frame(peso=peso.seq))
par(mfrow=c(1,2))
plot(peso,log(imc),col="grey")
lines(peso.seq,predict.expmod, lwd = 2, col = "darkgreen")
plot(peso,imc,col="grey")
lines(peso.seq,exp(predict.expmod), lwd = 2, col = "darkgreen")
# Exponential fit
expmod <- lm(log(imc)~peso)
summary(expmod)
predict.expmod<-predict(expmod,data.frame(peso=peso.seq))
par(mfrow=c(1,2))
plot(peso,log(imc),col="grey")
lines(peso.seq,predict.expmod, lwd = 2, col = "darkgreen")
plot(peso,imc,col="grey")
lines(peso.seq,exp(predict.expmod), lwd = 2, col = "darkgreen")
x11()
# Natural splines fit
library(splines)
nsmod<- lm(imc~ns(peso,df=4))
summary(nsmod)
predict.ns<-predict(nsmod,data.frame(peso=peso.seq))
plot(peso,imc,col="grey")
lines(peso.seq,predict.ns, lwd = 2, col = "orange")
setwd("~/Documents/dlee/GLM-BCAM/Curso Azti Mayo 2015/2 Logistic Regression/R-code")
library(effects)
library(ResourceSelection)
library(Epi)
###################################################
### Health perception data
###################################################
rm(list=ls()) # Remove all previous variables
salud <- read.table("data/salud.txt",header=TRUE, dec=",")
salud$g02     <- factor(salud$g02)
salud$sexo    <- factor(salud$sexo)
salud$con_tab <- factor(salud$con_tab)
salud$educa   <- factor(salud$educa)
salud$bebedor <- factor(salud$bebedor)
attach(salud)
setwd("~/Documents/dlee/GLM-BCAM/Curso Azti Mayo 2015/2 Logistic Regression/R-code")
salud <- read.table("data/salud.txt",header=TRUE, dec=",")
salud$g02     <- factor(salud$g02)
salud$sexo    <- factor(salud$sexo)
salud$con_tab <- factor(salud$con_tab)
salud$educa   <- factor(salud$educa)
salud$bebedor <- factor(salud$bebedor)
attach(salud)
# we can reasign the categories
levels(sexo)[1]<-"male"
levels(sexo)[2]<-"female"
levels(g02)[1]<-"good"
levels(g02)[2]<-"bad"
levels(bebedor)[1]<-"poco/nada"
levels(bebedor)[2]<-"ocasional"
levels(bebedor)[3]<-"frecuente"
###################################################
### ftable
###################################################
ftable(list(g02,sexo,bebedor))
ftable(list(bebedor,sexo,g02))
apply(ftable(list(bebedor,sexo,g02)),1,sum)
logistic1 <- glm(g02~sexo+bebedor,family=binomial(link=logit))
logistic1
summary(logistic1)
coefficients(logistic1)
exp(coefficients(logistic1))
g02
summary(logistic1)
g02[1]
g02[2]
nlevels(g02)
g02[[1]]
g02[[2]]
g02
