# Remove all the previous objects#
rm(list=ls())#
ls()
library(MortalitySmooth) # For "selectHMDdata" function#
library(fields)
##
# Read data#
# #
#
# Regressor variable (ages and years)#
x1 <- 10:100 ; n1 <- length(x1)#
x2 <- 1930:2006 ; n2 <- length(x2)#
# Response variable (deaths)#
Y <- selectHMDdata("Denmark", "Deaths", "Females", x1, x2)#
y <- c(Y)#
# Exposures#
E <- selectHMDdata("Denmark", "Exposures", "Females", x1, x2)#
e <- c(E)#
# Sample size#
n <- length(y) #
# Plot
install.packages("MortalitySmooth")
library(MortalitySmooth) # For "selectHMDdata" function
library(fields)          # For "image.plot" function
library(magic)           # For "adiag" function
##
# Read data#
# #
#
# Regressor variable (ages and years)#
x1 <- 10:100 ; n1 <- length(x1)#
x2 <- 1930:2006 ; n2 <- length(x2)#
# Response variable (deaths)#
Y <- selectHMDdata("Denmark", "Deaths", "Females", x1, x2)#
y <- c(Y)#
# Exposures#
E <- selectHMDdata("Denmark", "Exposures", "Females", x1, x2)#
e <- c(E)#
# Sample size#
n <- length(y) #
# Plot
x11()
zlim=range(log((y+0.5)/e)))
theta=25, phi=35, r=10, expand=0.55, pal=terrain.colors, nb.col=8,
persp.withcol(x1, x2, log((Y+0.5)/E), xlab="Age-at-Death", ylab="Year-at-Death", zlab="log(Death rates)",
par(mar=c(5, 2.5, 4, 2))
contour(x1, x2, log((Y+0.5)/E), nlevels=8, col=1, lwd=1, add=TRUE, zlim=range(log((y+0.5)/e)))
image.plot(x1, x2, log((Y+0.5)/E), col=terrain.colors(8), xlab="Age-at-Death", ylab="Year-at-Death",
par(mfrow=c(1,2))
zlim=range(log((y+0.5)/e)))
persp.withcol(x1, x2, log((Y+0.5)/E), xlab="Age-at-Death", ylab="Year-at-Death", zlab="log(Death rates)",
theta=25, phi=35, r=10, expand=0.55, pal=terrain.colors, nb.col=8,
zlim=range(log((y+0.5)/e)))
persp.withcol <- function(x,y,z,pal,nb.col,...,xlg=TRUE,ylg=TRUE){#
  # Due by TimothÃ©e Poisot#
  # http://www.r-bloggers.com/colouring-a-3d-plot-according-to-z-values/#
  colnames(z) <- y#
  rownames(z) <- x#
  nrz <- nrow(z)#
  ncz <- ncol(z) #
  color <- pal(nb.col)#
  zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]#
  facetcol <- cut(zfacet, nb.col)#
  par(xlog=xlg,ylog=ylg)#
  persp(#
    as.numeric(rownames(z)),#
    as.numeric(colnames(z)),#
    as.matrix(z),#
    col=color[facetcol],#
    ...#
  )#
}
x11()#
par(mfrow=c(1,2))#
persp.withcol(x1, x2, log((Y+0.5)/E), xlab="Age-at-Death", ylab="Year-at-Death", zlab="log(Death rates)", #
              theta=25, phi=35, r=10, expand=0.55, pal=terrain.colors, nb.col=8,#
              zlim=range(log((y+0.5)/e)))#
par(mar=c(5, 2.5, 4, 2))#
image.plot(x1, x2, log((Y+0.5)/E), col=terrain.colors(8), xlab="Age-at-Death", ylab="Year-at-Death",#
           zlim=range(log((y+0.5)/e)))#
contour(x1, x2, log((Y+0.5)/E), nlevels=8, col=1, lwd=1, add=TRUE, zlim=range(log((y+0.5)/e)))
Y
dim(Y)
Y
Y[,1]
plot(Y[,1])
matplot(Y,t='l')
n1
n2
x1[45]
Y[x1[45],]
hist(Y[x1[45],])
hist(Y[x1[45],],35)
PsplineSetup <- function(x, xl=min(x)-0.01, xr=max(x)+0.01, ndx=15, bdeg=3, pord=2){#
  # B-spline basis B#
  dx <- (xr-xl)/ndx#
  knots <- seq(xl-bdeg*dx, xr+bdeg*dx, by=dx)#
  B <- spline.des(knots=knots, x=x, ord=bdeg+1, outer.ok = TRUE)$design#
  # "pord"th order difference matrix D and penalty matrix P#
  D <- diff(diag(ncol(B)), differences=pord)#
  P <- crossprod(D)#
  # Output#
  return(list(dx=dx, knots=knots, B=B, D=D, P=P))#
}
source("clipboard")
gewtd()
####################################################
### Load libraries#
####################################################
library(effects)#
library(ResourceSelection)#
library(Epi)#
####################################################
### Health perception data#
####################################################
rm(list=ls()) # Remove all previous variables#
salud <- read.table("data/salud.txt",header=TRUE, dec=",")#
 salud$g02     <- factor(salud$g02)#
 salud$sexo    <- factor(salud$sexo)#
 salud$con_tab <- factor(salud$con_tab)#
 salud$educa   <- factor(salud$educa)#
 salud$bebedor <- factor(salud$bebedor)#
attach(salud)#
#
# we can reasign the categories#
levels(sexo)[1]<-"male"#
levels(sexo)[2]<-"female"#
#
levels(g02)[1]<-"good"#
levels(g02)[2]<-"bad"#
#
levels(bebedor)[1]<-"poco/nada"#
levels(bebedor)[2]<-"ocasional"#
levels(bebedor)[3]<-"frecuente"
logistic1 <- glm(g02~sexo+bebedor,family=binomial(link=logit))
logistic1
g02
as.numeric(g02)
table(as.numeric(g02))
table((g02))
salud
head(salud)
mod0 <- glm(g02~sexo,family=binomial(link=logit))
summary(mod0)
g02
####################################################
### Health perception data#
####################################################
rm(list=ls()) # Remove all previous variables#
salud <- read.table("data/salud.txt",header=TRUE, dec=",")#
 #salud$g02     <- factor(salud$g02)#
 salud$sexo    <- factor(salud$sexo)#
 salud$con_tab <- factor(salud$con_tab)#
 salud$educa   <- factor(salud$educa)#
 salud$bebedor <- factor(salud$bebedor)#
attach(salud)#
#
# we can reasign the categories#
levels(sexo)[1]<-"male"#
levels(sexo)[2]<-"female"#
#
#levels(g02)[1]<-"good"#
#levels(g02)[2]<-"bad"#
#
levels(bebedor)[1]<-"poco/nada"#
levels(bebedor)[2]<-"ocasional"#
levels(bebedor)[3]<-"frecuente"#
####################################################
### ftable#
####################################################
ftable(list(g02,sexo,bebedor))
ftable(list(bebedor,sexo,g02))#
apply(ftable(list(bebedor,sexo,g02)),1,sum)
logistic1 <- glm(g02~sexo+bebedor,family=binomial(link=logit))
summary(logistic1)
####################################################
### dichotomous predictor#
####################################################
logistica0 <- glm(g02~sexo,family=binomial(logit),data=salud)#
exp(coefficients(logistica0))#
exp(confint(logistica0))
logistic1 <- glm(g02~sexo+bebedor,family=binomial(link=logit))
l2 <- glm(as.factor(g02)~sexo+bebedor,family=binomial(link=logit))
l2
logistic1
plot(logistic1)
fitted(logistic1)
plot(fitted(logistic1))
plot(exp(fitted(logistic1)))
plot(fitted(logistic1))
logistic1 <- glm(g02~sexo+bebedor,family=binomial(link=logit))
summary(logistic1)#
attributes(logistic1)#
#
####################################################
### Confidence Intervals#
####################################################
confint(logistic1)
####################################################
### Odds-Ratio and C.I.#
####################################################
exp(coefficients(logistic1))#
#
exp(confint(logistic1))#
####################################################
###  tabulate#
####################################################
table(g02,sexo)#
####################################################
### dichotomous predictor#
####################################################
logistica0 <- glm(g02~sexo,family=binomial(logit),data=salud)#
exp(coefficients(logistica0))#
exp(confint(logistica0))
logistic1 <- glm(g02~sexo+bebedor,family=binomial(link=logit))#
summary(logistic1)#
attributes(logistic1)#
#
####################################################
### Confidence Intervals#
####################################################
confint(logistic1)#
####################################################
### Odds-Ratio and C.I.#
####################################################
exp(coefficients(logistic1))#
#
exp(confint(logistic1))#
####################################################
###  tabulate#
####################################################
table(g02,sexo)#
####################################################
### dichotomous predictor#
####################################################
logistica0 <- glm(g02~sexo,family=binomial(logit),data=salud)#
exp(coefficients(logistica0))#
exp(confint(logistica0))#
####################################################
### Polytomous predictor#
####################################################
# Create a new variable edad2#
salud$edad2 <- salud$edad#
salud$edad2[salud$edad >= 18 & salud$edad <= 29] <- 1#
salud$edad2[salud$edad >= 30 & salud$edad <= 44] <- 2#
salud$edad2[salud$edad >= 45 & salud$edad <= 64] <- 3#
#
# make it factor#
salud$edad2<-factor(salud$edad2)#
####################################################
### logistic reg model with polytomous predictor#
####################################################
logistic2=glm(g02~edad2,family=binomial(link=logit),data=salud)#
exp(coefficients(logistic2))#
####################################################
### logistic reg model with continous predictor#
####################################################
logistic3 <- glm(g02~imc,family=binomial(link=logit))#
summary(logistic3)#
####################################################
### OR#
####################################################
exp(coefficients(logistic3))#
####################################################
### Predict values#
####################################################
logit54 <- predict(logistic3,data.frame(imc=54))#
logit55 <- predict(logistic3,data.frame(imc=55))#
#
# Take the difference#
logit55-logit54
exp(-.1077952)
####################################################
### Polytomous predictor#
####################################################
# Create a new variable edad2#
salud$edad2 <- salud$edad#
salud$edad2[salud$edad >= 18 & salud$edad <= 29] <- 1#
salud$edad2[salud$edad >= 30 & salud$edad <= 44] <- 2#
salud$edad2[salud$edad >= 45 & salud$edad <= 64] <- 3
# make it factor#
salud$edad2<-factor(salud$edad2)
salud
salud
head(salud)
####################################################
### logistic reg model with polytomous predictor#
####################################################
logistic2=glm(g02~edad2,family=binomial(link=logit),data=salud)#
exp(coefficients(logistic2))
summary(logistic2)
exp(coefficients(logistic2))
####################################################
### logistic reg model with polytomous predictor#
####################################################
logistic2=glm(g02~edad,family=binomial(link=logit),data=salud)#
exp(coefficients(logistic2))
0.9500986^10
0.9500986^2
0.9500986^30
####################################################
### logistic reg model with polytomous predictor#
####################################################
logistic2=glm(g02~edad2,family=binomial(link=logit),data=salud)#
exp(coefficients(logistic2))
####################################################
### logistic reg model with continous predictor#
####################################################
logistic3 <- glm(g02~imc,family=binomial(link=logit))#
summary(logistic3)
####################################################
### OR#
####################################################
exp(coefficients(logistic3))
####################################################
### OR#
####################################################
exp(coefficients(logistic3))^10
####################################################
### OR#
####################################################
round(exp(coefficients(logistic3))^10,3)
0.8978114^10
####################################################
### predict#
####################################################
# if type="link" the values are the logit#
fitted3 <- predict(logistic3,type="response") #
plot(imc[order(imc)],fitted3[order(imc)],t='b',#
     xlab="imc", ylab="Fitted",ylim=c(0,1)) # order by imc#
abline(h=c(0,1),col="grey",lty=2)
logistic3 <- glm(as.factor(g02)~imc,family=binomial(link=logit))
####################################################
### predict#
####################################################
# if type="link" the values are the logit#
fitted3 <- predict(logistic3,type="response") #
plot(imc[order(imc)],fitted3[order(imc)],t='b',#
     xlab="imc", ylab="Fitted",ylim=c(0,1)) # order by imc#
abline(h=c(0,1),col="grey",lty=2)
logistic3
salud$g02     <- factor(salud$g02)
levels(g02)[1]<-"good"
levels(g02)[2]<-"bad"
logistic3 <- glm(g02~imc,family=binomial(link=logit))
####################################################
### predict#
####################################################
# if type="link" the values are the logit#
fitted3 <- predict(logistic3,type="response") #
plot(imc[order(imc)],fitted3[order(imc)],t='b',#
     xlab="imc", ylab="Fitted",ylim=c(0,1)) # order by imc#
abline(h=c(0,1),col="grey",lty=2)
g02
####################################################
### Health perception data#
####################################################
rm(list=ls()) # Remove all previous variables#
salud <- read.table("data/salud.txt",header=TRUE, dec=",")#
 salud$g02     <- factor(salud$g02)#
 salud$sexo    <- factor(salud$sexo)#
 salud$con_tab <- factor(salud$con_tab)#
 salud$educa   <- factor(salud$educa)#
 salud$bebedor <- factor(salud$bebedor)#
attach(salud)#
#
# we can reasign the categories#
levels(sexo)[1]<-"male"#
levels(sexo)[2]<-"female"#
#
levels(g02)[1]<-"good"#
levels(g02)[2]<-"bad"#
#
levels(bebedor)[1]<-"poco/nada"#
levels(bebedor)[2]<-"ocasional"#
levels(bebedor)[3]<-"frecuente"#
####################################################
### ftable#
####################################################
ftable(list(g02,sexo,bebedor))#
#
ftable(list(bebedor,sexo,g02))#
apply(ftable(list(bebedor,sexo,g02)),1,sum)#
#
####################################################
### logistic regression model 1#
####################################################
#
logistic1 <- glm(g02~sexo+bebedor,family=binomial(link=logit))#
summary(logistic1)#
attributes(logistic1)#
#
####################################################
### Confidence Intervals#
####################################################
confint(logistic1)#
####################################################
### Odds-Ratio and C.I.#
####################################################
exp(coefficients(logistic1))#
#
exp(confint(logistic1))#
####################################################
###  tabulate#
####################################################
table(g02,sexo)#
####################################################
### dichotomous predictor#
####################################################
logistica0 <- glm(g02~sexo,family=binomial(logit),data=salud)#
exp(coefficients(logistica0))#
exp(confint(logistica0))#
####################################################
### Polytomous predictor#
####################################################
# Create a new variable edad2#
salud$edad2 <- salud$edad#
salud$edad2[salud$edad >= 18 & salud$edad <= 29] <- 1#
salud$edad2[salud$edad >= 30 & salud$edad <= 44] <- 2#
salud$edad2[salud$edad >= 45 & salud$edad <= 64] <- 3#
#
# make it factor#
salud$edad2<-factor(salud$edad2)#
####################################################
### logistic reg model with polytomous predictor#
####################################################
logistic2=glm(g02~edad2,family=binomial(link=logit),data=salud)#
exp(coefficients(logistic2))#
####################################################
### logistic reg model with continous predictor#
####################################################
logistic3 <- glm(g02~imc,family=binomial(link=logit))#
summary(logistic3)#
####################################################
### OR#
####################################################
exp(coefficients(logistic3))#
####################################################
### Predict values#
####################################################
logit54 <- predict(logistic3,data.frame(imc=54))#
logit55 <- predict(logistic3,data.frame(imc=55))#
#
# Take the difference#
logit55-logit54#
####################################################
### OR change#
####################################################
exp(logit55-logit54)#
####################################################
### increase of c units#
####################################################
c = 10#
exp(logit55-logit54)^c # is equivalent to exp(c*logit55-c*logit54)#
####################################################
### predict#
####################################################
# if type="link" the values are the logit#
fitted3 <- predict(logistic3,type="response") #
plot(imc[order(imc)],fitted3[order(imc)],t='b',#
     xlab="imc", ylab="Fitted",ylim=c(0,1)) # order by imc#
abline(h=c(0,1),col="grey",lty=2)
g02
salud
head(salud)
salud$g02
salud$g02[1:3]
g02[1:3]
####################################################
### Health perception data#
####################################################
rm(list=ls()) # Remove all previous variables#
salud <- read.table("data/salud.txt",header=TRUE, dec=",")#
 salud$g02     <- factor(salud$g02)#
 salud$sexo    <- factor(salud$sexo)#
 salud$con_tab <- factor(salud$con_tab)#
 salud$educa   <- factor(salud$educa)#
 salud$bebedor <- factor(salud$bebedor)#
attach(salud)#
#
# we can reasign the categories#
levels(sexo)[1]<-"male"#
levels(sexo)[2]<-"female"#
#
levels(g02)[1]<-"bad"  # !!!!!#
levels(g02)[2]<-"good" # !!!!!#
#
levels(bebedor)[1]<-"poco/nada"#
levels(bebedor)[2]<-"ocasional"#
levels(bebedor)[3]<-"frecuente"#
####################################################
### ftable#
####################################################
ftable(list(g02,sexo,bebedor))#
#
ftable(list(bebedor,sexo,g02))#
apply(ftable(list(bebedor,sexo,g02)),1,sum)#
#
####################################################
### logistic regression model 1#
####################################################
#
logistic1 <- glm(g02~sexo+bebedor,family=binomial(link=logit))#
summary(logistic1)#
attributes(logistic1)#
#
####################################################
### Confidence Intervals#
####################################################
confint(logistic1)#
####################################################
### Odds-Ratio and C.I.#
####################################################
exp(coefficients(logistic1))#
#
exp(confint(logistic1))#
####################################################
###  tabulate#
####################################################
table(g02,sexo)#
####################################################
### dichotomous predictor#
####################################################
logistica0 <- glm(g02~sexo,family=binomial(logit),data=salud)#
exp(coefficients(logistica0))#
exp(confint(logistica0))#
####################################################
### Polytomous predictor#
####################################################
# Create a new variable edad2#
salud$edad2 <- salud$edad#
salud$edad2[salud$edad >= 18 & salud$edad <= 29] <- 1#
salud$edad2[salud$edad >= 30 & salud$edad <= 44] <- 2#
salud$edad2[salud$edad >= 45 & salud$edad <= 64] <- 3#
#
# make it factor#
salud$edad2<-factor(salud$edad2)#
####################################################
### logistic reg model with polytomous predictor#
####################################################
logistic2=glm(g02~edad2,family=binomial(link=logit),data=salud)#
exp(coefficients(logistic2))#
####################################################
### logistic reg model with continous predictor#
####################################################
logistic3 <- glm(g02~imc,family=binomial(link=logit))#
summary(logistic3)#
####################################################
### OR#
####################################################
exp(coefficients(logistic3))#
####################################################
### Predict values#
####################################################
logit54 <- predict(logistic3,data.frame(imc=54))#
logit55 <- predict(logistic3,data.frame(imc=55))#
#
# Take the difference#
logit55-logit54#
####################################################
### OR change#
####################################################
exp(logit55-logit54)#
####################################################
### increase of c units#
####################################################
c = 10#
exp(logit55-logit54)^c # is equivalent to exp(c*logit55-c*logit54)#
####################################################
### predict#
####################################################
# if type="link" the values are the logit#
fitted3 <- predict(logistic3,type="response") #
plot(imc[order(imc)],fitted3[order(imc)],t='b',#
     xlab="imc", ylab="Fitted",ylim=c(0,1)) # order by imc#
abline(h=c(0,1),col="grey",lty=2)#
####################################################
### plot fitted values#
####################################################
# if type="link" the values are the logit#
fitted3 <- predict(logistic3,type="response") #
plot(imc[order(imc)],fitted3[order(imc)],t='b',#
     xlab="imc", ylab="Fitted",ylim=c(0,1)) # order by imc#
abline(h=c(0,1),col="grey",lty=2)
g02
fitted3 <- predict(logistic3,type="link")
plot(imc[order(imc)],fitted3[order(imc)],t='b',
xlab="imc", ylab="Fitted",ylim=c(0,1)) # order by imc
abline(h=c(0,1),col="grey",lty=2)
fitted3 <- predict(logistic3,type="link")
plot(imc[order(imc)],fitted3[order(imc)],t='b',
xlab="imc", ylab="Fitted") # order by imc
abline(h=c(0,1),col="grey",lty=2)
fitted3 <- predict(logistic3,type="link")
plot(imc[order(imc)],fitted3[order(imc)],t='b',
xlab="imc", ylab="Fitted") # order by imc
####################################################
### plot fitted values#
####################################################
# if type="link" the values are the logit#
fitted3 <- predict(logistic3,type="link") #
plot(imc[order(imc)],fitted3[order(imc)],t='b',#
     xlab="imc", ylab="Fitted") # order by imc
fitted3 <- predict(logistic3,type="response") #
plot(imc[order(imc)],fitted3[order(imc)],t='b',#
     xlab="imc", ylab="Fitted",ylim=c(0,1), main="response") # order by imc#
abline(h=c(0,1),col="grey",lty=2)
####################################################
### dichotomous and continuous predictors#
####################################################
logistic4<-glm(g02~sexo,family=binomial(link=logit))#
logistic5<-glm(g02~sexo+edad,family=binomial(link=logit))#
coefficients(logistic4)#
coefficients(logistic5)
####################################################
### plot#
####################################################
  fitted5=predict(logistic5,type="link")#
  plot(edad,fitted5,type="n",main="No interaction")#
  points(edad[sexo=="male"],fitted5[sexo=="male"],col=2,t='l', lwd=3)#
  points(edad[sexo=="female"],fitted5[sexo=="female"],col=4,t='l', lwd=3)#
  legend("topright", col=c(2,4),c("male","female"), lty=1, lwd=5)
fitted5=predict(logistic5,type="response")
plot(edad,fitted5,type="n",main="No interaction")
points(edad[sexo=="male"],fitted5[sexo=="male"],col=2,t='l', lwd=3)
points(edad[sexo=="male"],fitted5[sexo=="male"],col=2,t='p', lwd=3)
points(edad[sexo=="female"],fitted5[sexo=="female"],col=4,t='p', lwd=3)
fitted5=predict(logistic5,type="response")#
  plot(edad,fitted5,type="n",main="No interaction")#
  points(edad[sexo=="male"],fitted5[sexo=="male"],col=2,t='p', lwd=3)#
  points(edad[sexo=="female"],fitted5[sexo=="female"],col=4,t='p', lwd=3)#
  legend("topright", col=c(2,4),c("male","female"), lty=1, lwd=5)
fitted5=predict(logistic5,type="response")
plot(edad,fitted5,type="n",main="No interaction",ylim =c(0,1))
abline(h=c(0,1),col="grey", lty=2)
points(edad[sexo=="male"],fitted5[sexo=="male"],col=2,t='p', lwd=3)
points(edad[sexo=="female"],fitted5[sexo=="female"],col=4,t='p', lwd=3)
legend("topright", col=c(2,4),c("male","female"), lty=1, lwd=5)
fitted5=predict(logistic5,type="link")#
  plot(edad,fitted5,type="n",main="No interaction")#
  points(edad[sexo=="male"],fitted5[sexo=="male"],col=2,t='l', lwd=3)#
  points(edad[sexo=="female"],fitted5[sexo=="female"],col=4,t='l', lwd=3)#
  legend("topright", col=c(2,4),c("male","female"), lty=1, lwd=5)
####################################################
### compare coefficients#
####################################################
coefficients(logistic5)[2]#
coefficients(logistic4)[2]
hist(sexo)
hist(salud$sexo)
salud
names(salud)
names(salud$sexo)
(salud$sexo)
hist(salud$sexo)
hist(as.numeric(salud$sexo))
barplot(salud$sexo)
plot(salud$sexo)
pie(salud$sexo)
pie(as.numeric(salud$sexo))
####################################################
### fit model with interaction#
####################################################
logistic7<-glm(g02~sexo+edad+sexo:edad,family=binomial(link=logit))#
summary(logistic7)#
coefficients(logistic7)
####################################################
### plot#
####################################################
fitted7=predict(logistic7,type="link")#
plot(edad,fitted5,type="n",main="without & with interaction sexo:edad")#
points(edad[sexo=="male"],fitted5[sexo=="male"],col=2)#
points(edad[sexo=="female"],fitted5[sexo=="female"],col=4)#
points(edad[sexo=="female"],fitted7[sexo=="female"],col=3,pch=2)#
legend("topright", col=c(2,4,3),pch=c(1,1,2),c("male","female", "female-interact"),cex=1.2)
summary(logistic7)
####################################################
### logistic model #
####################################################
logistic8<-glm(g02~sexo+peso,family=binomial(link=logit))#
summary(logistic8)#
####################################################
### compare coefficients#
####################################################
coefficients(logistic4)#
coefficients(logistic8)#
####################################################
### with interaction#
####################################################
logistic9<-glm(g02~sexo+peso+sexo:peso,family=binomial(link=logit))
####################################################
### plot#
####################################################
fitted9=predict(logistic9,type="link")#
plot(peso,fitted9,type="n",main="with interaction")#
points(peso[sexo=="male"],fitted9[sexo=="male"],col=2)#
points(peso[sexo=="female"],fitted9[sexo=="female"],col=4)#
legend("bottomleft", col=c(2,4),pch=c(1,1),c("male","female"),cex=1.2)#
#
coefficients(logistic9)
fitted9=predict(logistic9,type="response")#
plot(peso,fitted9,type="n",main="with interaction")#
points(peso[sexo=="male"],fitted9[sexo=="male"],col=2)#
points(peso[sexo=="female"],fitted9[sexo=="female"],col=4)#
legend("bottomleft", col=c(2,4),pch=c(1,1),c("male","female"),cex=1.2)#
#
coefficients(logistic9)
fitted9=predict(logistic9,type="link")
plot(peso,fitted9,type="n",main="with interaction")
points(peso[sexo=="male"],fitted9[sexo=="male"],col=2)
points(peso[sexo=="female"],fitted9[sexo=="female"],col=4)
legend("bottomleft", col=c(2,4),pch=c(1,1),c("male","female"),cex=1.2)
coefficients(logistic9)
logistic8
summary(logistic8)
coef(logistic8)
exp(coef(logistic8))
####################################################
### plot fits with C.I.#
####################################################
fitted8=predict(logistic8,se.fit=TRUE,type="link")#
L.inf=with(fitted8,exp(fit-1.96*se.fit)/(1+exp(fit-1.96*se.fit)))#
L.sup=with(fitted8,exp(fit+1.96*se.fit)/(1+exp(fit+1.96*se.fit)))#
with(fitted8,plot(peso[sexo=="male"],(exp(fit)/(1+exp(fit)))[sexo=="male"],ylim=c(0.1,1),ylab="Probability",cex=0.6))#
points(peso[sexo=="male"],L.inf[sexo=="male"],col=2,cex=0.6)#
points(peso[sexo=="male"],L.sup[sexo=="male"],col=2,cex=0.6)#
legend("topright", c("probability","C.I."),col=c(1,2),pch=c(1,1))#
abline(v=mean(peso[sexo=="male"]),col=c("red"),lwd=2,lty=1)
####################################################
### plot fits with C.I.#
####################################################
fitted8=predict(logistic8,se.fit=TRUE,type="link")#
L.inf=with(fitted8,exp(fit-1.96*se.fit)/(1+exp(fit-1.96*se.fit)))#
L.sup=with(fitted8,exp(fit+1.96*se.fit)/(1+exp(fit+1.96*se.fit)))#
with(fitted8,plot(peso[sexo=="male"],(exp(fit)/(1+exp(fit)))[sexo=="male"],ylim=c(0.1,1),ylab="Probability",cex=0.6))#
points(peso[sexo=="male"],L.inf[sexo=="male"],col=2,cex=0.6)#
points(peso[sexo=="male"],L.sup[sexo=="male"],col=2,cex=0.6)#
legend("topright", c("probability","C.I."),col=c(1,2),pch=c(1,1))#
abline(v=mean(peso[sexo=="male"]),col=c("red"),lwd=2,lty=1)
salud$bebedor
logistic12 <- glm(formula = g02 ~ educa+edad2+sexo+peso, family = binomial(link = logit),data=salud)
####################################################
### include sexo:peso interaction#
####################################################
logistic12 <- glm(formula = g02 ~ educa+edad2+sexo+peso, family = binomial(link = logit),data=salud)#
logistic13 <- glm(formula = g02 ~ educa+edad2+sexo*peso, family = binomial(link = logit),data=salud)
summary(logistic13)
anova(logistic13)
anova(logistic13,test="Chisq")
####################################################
### plot effects#
####################################################
library(effects)#
#
plot(effect("educa",logistic13,ylab="Prob(salud)"))#
#
plot(effect("sexo*peso",logistic13,ylab="Prob(salud)"))
####################################################
###  variable selection#
####################################################
mod <- glm(formula=g02~educa+edad2+bebedor+sexo*peso+anio, family = binomial(link = logit),data=salud)#
#
library(MASS)#
stepAIC(mod,trace=FALSE)$anova
summary(mod)
anova(mod)
anova(mod,test="Chisq")
####################################################
### read mammography experience data#
####################################################
mamexp=read.table("data/mammexp.txt",header=TRUE)#
names(mamexp)
####################################################
### transform numeric variables to factors#
####################################################
mamexp$me<-factor(mamexp$me)#
mamexp$symp<-factor(mamexp$symp)#
mamexp$hist<-factor(mamexp$hist)#
mamexp$bse<-factor(mamexp$bse)#
mamexp$dect<-factor(mamexp$dect)#
#levels(mamexp$me)<-c("never","1yearago","over2years")#
#levels(mamexp$hist)<-c("no","yes")#
#
attach(mamexp)#
####################################################
### load libraries#
####################################################
library(VGAM)   #
library(nnet)  #
library(mlogit)#
####################################################
### cross table#
####################################################
xtabs(~me+hist,data=mamexp)
####################################################
### fit model using vglm#
####################################################
vglm1 <- vglm(me ~ hist, family=multinomial(refLevel=1), data=mamexp)#
summary(vglm1)
library(nnet)
multi1=multinom(me ~ hist, data=mamexp)
summary(multi1)
####################################################
### Get p-values#
####################################################
pvals<-function(test){#
z <- summary(test)$coefficients/summary(test)$standard.errors#
p<-pnorm(abs(summary(test)$coefficients/summary(test)$standard.errors),lower.tail=FALSE)*2#
output <- list(z=z,p=p)#
return(output)#
}#
#
pvals(multi1)
multi1=multinom(me ~ hist, data=mamexp)#
summary(multi1)#
#
####################################################
### Get p-values#
####################################################
pvals<-function(test){#
z <- summary(test)$coefficients/summary(test)$standard.errors#
p<-pnorm(abs(summary(test)$coefficients/summary(test)$standard.errors),lower.tail=FALSE)*2#
output <- list(z=z,p=p)#
return(output)#
}#
#
pvals(multi1)
pvals(multi1)$p<0.05#
#
####################################################
### multi1 object#
####################################################
multi1#
####################################################
### get coefficients#
####################################################
coefficients(multi1) # We can extract the coefficients of the model#
####################################################
### Odds#
####################################################
exp(coefficients(multi1))#
####################################################
### C.I's#
####################################################
exp(confint(multi1))#
####################################################
### Model with only an intercept#
####################################################
multi0 <- multinom(me~1,data=mamexp)#
anova(multi0,multi1)#
####################################################
### cross table#
####################################################
xtabs(~me+dect,data=mamexp)#
####################################################
### with dect covariate#
####################################################
multi2 <- multinom(me~dect,data=mamexp)#
####################################################
### LRT test#
####################################################
anova(multi0,multi2)#
####################################################
### coefficients and odds#
####################################################
coef(multi2)#
exp(coef(multi2))
multi2
pvals(multi2)
pvals(multi2)$p<.05
anova(multi2)
anova(multi1,multi2)
####################################################
### LRT significance tests#
####################################################
multi3 <- multinom(me~symp,data=mamexp); anova(multi0,multi3)#
#
multi4 <- multinom(me~bse,data=mamexp); anova(multi0,multi4)#
#
multi5 <- multinom(me~pb,data=mamexp); anova(multi0,multi5)#
multi6 <- multinom(me~symp+pb+bse+hist+dect,data=mamexp)#
####################################################
### with additional covariates#
####################################################
 vglm6 <- vglm(me ~ symp+pb+bse+hist+dect,#
               family=multinomial(refLevel=1), data=mamexp)#
#
summary(vglm6)#
#
####################################################
### recode variable symp in library(car)#
####################################################
mamexp$symp01<-mamexp$symp  # create a new variable symp01#
#
library(car)#
mamexp$symp01<-recode(mamexp$symp,"1=0;2=0;3=1;4=1")#
#
 vglm6a <- vglm(me ~ symp01+pb+bse+hist+dect,#
               family=multinomial(refLevel=1), data=mamexp)#
#
summary(vglm6a)#
####################################################
### use multinom to compare models LRT#
####################################################
multi6a <- multinom(me~symp01+pb+bse+hist,data=mamexp)#
multi7a <- multinom(me~symp01+pb+bse+hist+dect,data=mamexp)#
anova(multi6a,multi7a)#
####################################################
### recode dect#
####################################################
table(dect)#
mamexp$dect01 <- mamexp$dect#
mamexp$dect01 <- recode(mamexp$dect01,"0=0; 1=0; 2=1")#
#
multi7b <- multinom(me~symp01+pb+bse+hist+dect01,data=mamexp)#
anova(multi6a,multi7b)#
####################################################
### fit with dect01#
####################################################
 vglm7a <- vglm(me ~ symp01+pb+bse+hist+dect01,#
                family=multinomial(refLevel=1), data=mamexp)#
#
summary(vglm7a)#
#
####################################################
### use anova for LRT#
####################################################
multi7b <- multinom(me~hist+symp01+bse,data=mamexp)#
multi7c <- multinom(me~hist+symp01+bse+dect01,data=mamexp)#
anova(multi7b,multi7c)
summary(vglm7a)
anova(vglm7a)
anova(multi7)
anova(multi7multi7b <- multinom(me~hist+symp01+bse,data=mamexp)#
multi7c <- multinom(me~hist+symp01+bse+dect01,data=mamexp)#
anova(multi7b,multi7c))
multi7b <- multinom(me~hist+symp01+bse,data=mamexp)
multi7c <- multinom(me~hist+symp01+bse+dect01,data=mamexp)
anova(multi7b,multi7c)
vglm8 <- vglm(me ~ symp01+benef+bse+hist+dect01,#
                family=multinomial(refLevel=1), data=mamexp)#
matplot(t(coef(multi8)[,5:7]),t='b',lwd=3,main="Plot of the estimated logit regression coefficients",xlab="pb (created as benef)", ylab="Estimated logit")
####################################################
### recode variable symp in library(car)#
####################################################
mamexp$symp01<-mamexp$symp  # create a new variable symp01#
#
library(car)#
mamexp$symp01<-recode(mamexp$symp,"1=0;2=0;3=1;4=1")#
#
 vglm6a <- vglm(me ~ symp01+pb+bse+hist+dect,#
               family=multinomial(refLevel=1), data=mamexp)#
#
summary(vglm6a)#
####################################################
### use multinom to compare models LRT#
####################################################
multi6a <- multinom(me~symp01+pb+bse+hist,data=mamexp)#
multi7a <- multinom(me~symp01+pb+bse+hist+dect,data=mamexp)#
anova(multi6a,multi7a)#
####################################################
### recode dect#
####################################################
table(dect)#
mamexp$dect01 <- mamexp$dect#
mamexp$dect01 <- recode(mamexp$dect01,"0=0; 1=0; 2=1")#
#
multi7b <- multinom(me~symp01+pb+bse+hist+dect01,data=mamexp)#
anova(multi6a,multi7b)#
####################################################
### fit with dect01#
####################################################
 vglm7a <- vglm(me ~ symp01+pb+bse+hist+dect01,#
                family=multinomial(refLevel=1), data=mamexp)#
#
summary(vglm7a)#
#
####################################################
### use anova for LRT#
####################################################
multi7b <- multinom(me~hist+symp01+bse,data=mamexp)#
multi7c <- multinom(me~hist+symp01+bse+dect01,data=mamexp)#
anova(multi7b,multi7c)#
####################################################
### group pb variable#
####################################################
mamexp$benef <- mamexp$pb#
mamexp$benef[mamexp$benef<=5] =  0#
mamexp$benef[mamexp$benef>5 & mamexp$benef <=7] =  1#
mamexp$benef[mamexp$benef>7 & mamexp$benef <=9] =  2#
mamexp$benef[mamexp$benef>9] = 3#
mamexp$benef <- factor(mamexp$benef)#
#
####################################################
### estimate and plot coefficients#
####################################################
 multi8 <- multinom(me~hist+symp01+bse+benef,data=mamexp)#
#
pvals(multi8)#
pvals(multi8)$p<0.05#
#
 vglm8 <- vglm(me ~ symp01+benef+bse+hist+dect01,#
                family=multinomial(refLevel=1), data=mamexp)#
matplot(t(coef(multi8)[,5:7]),t='b',lwd=3,main="Plot of the estimated logit regression coefficients",xlab="pb (created as benef)", ylab="Estimated logit")#
multi7c <- multinom(me~hist+symp01+bse+pb,data=mamexp)#
####################################################
### add pb#
####################################################
multi9 <- multinom(me~hist+symp01+bse+pb+dect01,data=mamexp)#
#
summary(multi9)#
####################################################
### Odds#
####################################################
exp(coef(multi9))
####################################################
### plot effects#
####################################################
library(effects)#
#
plot(effect("symp01",multi9))#
plot(effect("hist",multi9))#
plot(effect("bse",multi9))#
plot(effect("dect01",multi9))#
plot(effect("pb",multi9),style="stacked")#
plot(effect("pb",multi9),style="lines")
matplot(t(coef(multi8)[,5:7]),t='b',lwd=3,main="Plot of the estimated logit regression coefficients",xlab="pb (created as benef)", ylab="Estimated logit")
coef(multi8)[,5:7]
### Introduction to Generalized Linear Models with R#
### Date: May, 14 & 15 2015#
### Dae-Jin Lee, dlee@bcamath.org#
#
### 4. Ordinal regression#
####################################################
### read data .dta format#
####################################################
library(foreign)#
#
gradschool<-read.dta(file="data/gradschool.dta")
####################################################
### convert to factor#
####################################################
#
 gradschool$apply <- ordered(gradschool$apply)
gradschool$apply
?polr
summary(ord1)
ord1 <- polr(apply~pared,data=gradschool)
summary(ord1)
####################################################
### compute p-values of the fitted model#
####################################################
# we create a function to obtain a table with p-values#
pvals <- function(mod){#
# store table#
tab <- coef(summary(mod))#
## calculate and store p values#
p <- pnorm(abs(tab[, "t value"]), lower.tail = FALSE) * 2#
## combined table#
tab <- cbind(tab, "p value" = round(p,4))#
tab#
}#
pvals(ord1)#
confint(ord1)#
exp(confint(ord1))
pared
attach(gradschool)
pared
class(pared)
gradschool$pared  <- factor(gradschool$pared)
gradschool$public <- factor(gradschool$public)
### polr function in MASS
library(MASS)
ord1 <- polr(apply~pared,data=gradschool)
summary(ord1)
####################################################
### compute p-values of the fitted model#
####################################################
# we create a function to obtain a table with p-values#
pvals <- function(mod){#
# store table#
tab <- coef(summary(mod))#
## calculate and store p values#
p <- pnorm(abs(tab[, "t value"]), lower.tail = FALSE) * 2#
## combined table#
tab <- cbind(tab, "p value" = round(p,4))#
tab#
}#
pvals(ord1)#
confint(ord1)#
exp(confint(ord1))
####################################################
### fit polr for public and gpa covariates and test significance#
####################################################
ord2 <- polr(apply~public,data=gradschool)#
summary(ord2)#
ord3 <- polr(apply~gpa,data=gradschool)#
summary(ord3)#
ord0 <- polr(apply~1,data=gradschool)#
#
summary(ord0)#
anova(ord0,ord1)#
anova(ord0,ord2)#
anova(ord0,ord3)
####################################################
### using function vglm in VGAM#
####################################################
library(VGAM)#
apply2=ordered(gradschool$apply)#
m0 <- vglm(apply2~pared+gpa,family=cumulative(parallel=TRUE),data=gradschool)  #
m1 <- vglm(apply2~pared+gpa,family=cumulative(parallel=FALSE),data=gradschool)#
#
test.po <- 2*logLik(m1)-2*logLik(m0)#
df.po <- length(coef(m1))-length(coef(m0))#
#
test.po#
df.po#
1-pchisq(test.po,df=df.po) # 0.6584501 (Do not reject the null hypothesis)
species<-read.table("data/species.txt",header=TRUE)#
names(species)
####################################################
### recode factor variables and plot#
####################################################
species$pH<-factor(species$pH)#
#
species$pH<-factor(species$pH, labels=c("Low","Medium","High"))
species$pH
levels(species$pH)
attach(species)#
plot(Biomass,Species,type="n")#
#
spp<-split(Species,pH)#
#
bio<-split(Biomass,pH)#
#
points(bio[[1]],spp[[1]],pch=16,col=1)#
points(bio[[2]],spp[[2]],pch=17,col=2)#
points(bio[[3]],spp[[3]],pch=15,col=4)#
legend("topright",legend=c("Low","Medium","High"),pch=c(16,17,15),col=c(1,2,4))#
abline(lm(Species[pH=="Low"]~Biomass[pH=="Low"]),lwd=2,col=1)#
abline(lm(Species[pH=="Medium"]~Biomass[pH=="Medium"]),lwd=2,col=2)#
abline(lm(Species[pH=="High"]~Biomass[pH=="High"]),lwd=2,col=4)
Biomass
####################################################
### Fit a Poisson glm's#
####################################################
m0=glm(Species~Biomass,family=poisson,data=species)#
anova(m0,test="Chisq")#
#
m1=glm(Species~pH,family=poisson,data=species)#
#
anova(m1,test="Chisq")
m0=glm(Species~Biomass,family=poisson,data=species)
anova(m0,test="Chisq")
m1=glm(Species~pH,family=poisson,data=species)
anova(m1,test="Chisq")
####################################################
### Include interaction#
####################################################
m2 <- glm(Species~Biomass+pH,family=poisson,data=species)#
m3 <- glm(Species~Biomass*pH,family=poisson,data=species)#
#
anova(m2,m3,test="Chisq")
####################################################
### summary#
####################################################
summary(m3)#
####################################################
### plot fits#
####################################################
x <- rep(seq(0,10,l=101),3) # Biomass.x#
#
pH.seq <- factor(c(rep("Low",101),rep("Medium",101),rep("High",101)))#
#
fit3 <- predict(m3,data.frame(list(Biomass=x,pH = pH.seq)), type="response")#
plot(Biomass,Species,type="n",main="response")#
spp3<-split(fit3,pH.seq)#
bio3<-split(x,pH.seq)#
points(bio3[["Low"]],spp3[["Low"]],pch=16,col=1)#
points(bio3[["Medium"]],spp3[["Medium"]],pch=17,col=2)#
points(bio3[["High"]],spp3[["High"]],pch=15,col=4)#
points(bio[["Low"]],spp[["Low"]],pch=16,col=1)#
points(bio[["Medium"]],spp[["Medium"]],pch=17,col=2)#
points(bio[["High"]],spp[["High"]],pch=15,col=4)#
legend("topright",legend=c("Low","Medium","High"),pch=c(16,17,15),col=c(1,2,4))
fit3a <- predict(m3,data.frame(list(Biomass=x,pH = pH.seq)), type="link")#
#
spp3a<-split(fit3a,pH.seq)#
bio3a<-split(x,pH.seq)#
plot(Biomass,log(Species),type="n",main="link")#
points(bio3[["Low"]],log(spp3[["Low"]]),pch=16,col=1)#
points(bio3[["Medium"]],log(spp3[["Medium"]]),pch=17,col=2)#
points(bio3[["High"]],log(spp3[["High"]]),pch=15,col=4)#
points(bio[["Low"]],log(spp[["Low"]]),pch=16,col=1)#
points(bio[["Medium"]],log(spp[["Medium"]]),pch=17,col=2)#
points(bio[["High"]],log(spp[["High"]]),pch=15,col=4)#
legend("topright",legend=c("Low","Medium","High"),pch=c(16,17,15),col=c(1,2,4))
####################################################
### Quasi-Poisson#
####################################################
m4 <- glm(Species~Biomass*pH,family=quasipoisson,data=species)
####################################################
### test for overdispersion#
####################################################
library(AER)#
dispersiontest(m3)#
####################################################
### Negative Binomial#
####################################################
library(MASS)#
m5 <- glm.nb(Species~Biomass*pH,data=species)
dispersiontest(m3)
m5
summary(m5)
