tornillos <- matrix(c(4,0,0,0,
14,60,2,0,
0,20,16,1,37,
18,80,18,1),ncol=3,byrow=TRUE)
tornillos <- matrix(c(4,0,0,0,
14,60,2,0,
0,20,16,1,
18,80,18,1),ncol=3,byrow=TRUE)
tornillos <- matrix(c(4,0,0,0,
14,60,2,0,
0,20,16,1,
18,80,18,1),ncol=4,byrow=TRUE)
tornillos
colnames(tornillos) <- c("40-60","60-80","80-100","100-120")
rownames(tornillos) <- c("140-160","160-180","180-200")
library(plot3D)
tornillos <- matrix(c(4,0,0,0,
14,60,2,0,
0,20,16,1,
18,80,18,1),ncol=4,byrow=TRUE)
colnames(tornillos) <- c("40-60","60-80","80-100","100-120")
rownames(tornillos) <- c("140-160","160-180","180-200")
tornillos <- as.table(tornillos)
tornillos
rownames(tornillos)
rownames(tornillos) <- c("140-160","160-180","180-200")
library(plot3D)
tornillos <- matrix(c(4,0,0,0,
14,60,2,0,
0,20,16,1),ncol=4,byrow=TRUE)
colnames(tornillos) <- c("40-60","60-80","80-100","100-120")
rownames(tornillos) <- c("140-160","160-180","180-200")
tornillos <- as.table(tornillos)
tornillos
hist3D(z=tornillos, border="black")
?hist3D
hist3D(z=tornillos, border="black", space=.5)
hist3D(z=tornillos, border="black", space=0.1)
hist3D(z=tornillos, border="black", space=0.1,expand=TRUE)
hist3D(z=tornillos, border="black", space=0.1,expand=TRUE, theta=-30)
hist3D(z=tornillos, border="black", space=0.1,expand=TRUE, theta=30)
hist3D(z=tornillos, border="black", space=0.1,expand=TRUE, theta=30,phi=30)
hist3D(z=tornillos, border="black", space=0.1,expand=TRUE, theta=30,phi=30,col=topo.colors(5))
hist3D(z=tornillos, border="black", space=0.1,expand=TRUE, theta=30,phi=30,col=topo.colors(25))
hist3D(z=tornillos, border="black", space=0.1,expand=TRUE, theta=15,phi=30,col=topo.colors(25))
hist3D(z=tornillos, border="black", space=0.1,expand=TRUE, theta=25,phi=25,col=topo.colors(25))
hist3D(z=tornillos, border="black", space=0.1,expand=TRUE, theta=25,phi=25,col=topo.colors(25),ticktype="detailed")
par(mfrow = c(2, 2))
# simple, no scaling, use breaks to set colors
persp3D(z = volcano, main = "volcano", clab = c("height", "m"),
breaks = seq(80,200, by = 10))
# keep ratios between x- and y (scale = FALSE)
# change ratio between x- and z (expand)
persp3D(z = volcano, x = 1: nrow(volcano), y = 1:ncol(volcano),
expand = 0.3, main = "volcano", facets = FALSE, scale = FALSE,
clab = "height, m", colkey = list(side = 1, length = 0.5))
# ribbon, in x--direction
V <- volcano[, seq(1, ncol(volcano), by = 3)]  # lower resolution
ribbon3D(z = V, colkey = list(width = 0.5, length = 0.5,
cex.axis = 0.8, side = 2), clab = "m")
# ribbon, in y-direction
Vy <- volcano[seq(1, nrow(volcano), by = 3), ]
ribbon3D(z = Vy, expand = 0.3, space = 0.3, along = "y",
colkey = list(width = 0.5, length = 0.5, cex.axis = 0.8))
## =======================================================================
## hist3D
## =======================================================================
par(mfrow = c(2, 2))
VV   <- volcano[seq(1, 87, 15), seq(1, 61, 15)]
hist3D(z = VV, scale = FALSE, expand = 0.01, border = "black")
# transparent colors
hist3D(z = VV, scale = FALSE, expand = 0.01,
alpha = 0.5, opaque.top = TRUE, border = "black")
hist3D(z = VV, scale = FALSE, expand = 0.01, facets = FALSE, lwd = 2)
hist3D(z = VV, scale = FALSE, expand = 0.01, facets = NA)
VV = tornillos
par(mfrow = c(2, 2))
hist3D(z = VV, scale = FALSE, expand = 0.01, bty = "g", phi = 20,
col = "#0072B2", border = "black", shade = 0.2, ltheta = 90,
space = 0.3, ticktype = "detailed", d = 2)
plotdev(xlim = c(-0.2, 1.2), ylim = c(-0.2, 1.2), theta = 45)
ribbon3D(z = VV, scale = FALSE, expand = 0.01, bty = "g", phi = 20,
col = "lightblue", border = "black", shade = 0.2, ltheta = 90,
space = 0.3, ticktype = "detailed", d = 2, curtain = TRUE)
ribbon3D(z = VV, scale = FALSE, expand = 0.01, bty = "g", phi = 20, zlim = c(95,183),
col = "lightblue", lighting = TRUE, ltheta = 50, along = "y",
space = 0.7, ticktype = "detailed", d = 2, curtain = TRUE)
hist3D(z = VV, scale = FALSE, expand = 0.01, bty = "g", phi = 20,
col = "#0072B2", border = "black", shade = 0.2, ltheta = 90,
space = 0.3, ticktype = "detailed", d = 2)
ribbon3D(z = VV, scale = FALSE, expand = 0.01, bty = "g", phi = 20,
col = "lightblue", border = "black", shade = 0.2, ltheta = 90,
space = 0.3, ticktype = "detailed", d = 2, curtain = TRUE)
ribbon3D(z = VV, scale = FALSE, expand = 0.01, bty = "g", phi = 20, zlim = c(95,183),
col = "lightblue", lighting = TRUE, ltheta = 50, along = "y",
space = 0.7, ticktype = "detailed", d = 2, curtain = TRUE)
hist3D(z = VV,x=c("40-60","60-80","80-100","100-120"),y= c("140-160","160-180","180-200"), scale = FALSE, expand = 0.01, bty = "g", phi = 20,
col = "#0072B2", border = "black", shade = 0.2, ltheta = 90,
space = 0.3, ticktype = "detailed", d = 2)
VV
hist3D(z = VV,x=c("40-60","60-80","80-100","100-120"),y= c("140-160","160-180","180-200"), scale = FALSE, expand = 0.01, bty = "g", phi = 20,
col = "#0072B2", border = "black", shade = 0.2, ltheta = 90,
space = 0.3, ticktype = "detailed", d = 2)
hist3D(z = VV,y=c("40-60","60-80","80-100","100-120"),x= c("140-160","160-180","180-200"), scale = FALSE, expand = 0.01, bty = "g", phi = 20,col = "#0072B2", border = "black", shade = 0.2, ltheta = 90,space = 0.3, ticktype = "detailed", d = 2)
rep(40,120,by=20)
seq(40,120,by=20)
seq(40,120,l=4)
hist3D(z = VV, scale = FALSE, expand = 0.01, bty = "g", phi = 20,col = "#0072B2", border = "black", shade = 0.2, ltheta = 90,space = 0.3, ticktype = "simple", d = 2)
tornillos
tornillos
prop.table(VV)
Peso <- rnorm(20,mean=80,sd=2)
Long <- rnorm(140,mean=155,sd=2)
Peso <- rnorm(20,mean=80,sd=2)
Long <- rnorm(20,mean=155,sd=2)
plot(Peso,Long)
Peso <- rnorm(100,mean=80,sd=2)
Long <- rnorm(100,mean=155,sd=2)
plot(Peso,Long)
Peso <- rnorm(100,mean=80,sd=2)
Long <- rnorm(100,mean=155,sd=2)
Long <- .85*Peso
plot(Peso,Long)
Long <- .85*Peso + rnorm(100)
plot(Peso,Long)
Peso <- rnorm(100,mean=80,sd=2)
Long <- rnorm(100,mean=155,sd=5)
Long <- .85*Peso + rnorm(100)
plot(Peso,Long)
Peso <- rnorm(100,mean=80,sd=2)
Long <- rnorm(100,mean=155,sd=5)
Long <- 65+.85*Peso + rnorm(100)
plot(Peso,Long)
Peso <- rnorm(100,mean=80,sd=5)
Long <- rnorm(100,mean=155,sd=5)
Long <- 65+.85*Peso + rnorm(100)
plot(Peso,Long,xlim=c(40,120))
Peso <- rnorm(100,mean=80,sd=5)
Long <- rnorm(100,mean=155,sd=5)
Long <- 65+.15*Peso + rnorm(100)
plot(Peso,Long,xlim=c(40,120))
plot(Peso,Long,xlim=c(140,200),ylim=c(40,120))
Peso <- runif(100,40,120)
Peso
Peso <- runif(100,40,120)
Long <- runif(100,140,200)
Long <- 65+.15*Peso + rnorm(100)
plot(Peso,Long,xlim=c(140,200),ylim=c(40,120))
plot(Peso,Long)
Long <- 65+.25*Peso + rnorm(100)
plot(Peso,Long)
Peso <- runif(100,40,120)
Long <- runif(100,140,200)
plot(Peso,Long)
Long <- .45*Peso + rnorm(100,0,0.1)
plot(Peso,Long)
Long <- .15*Peso + rnorm(100,0,0.1)
plot(Peso,Long)
Long <- .15*Peso + rnorm(100,0,2)
plot(Peso,Long)
Long <- 110+.15*Peso + rnorm(100,0,2)
plot(Peso,Long)
plot(Peso,Long,xlim=c(140,200),ylim=c(40,120))
plot(Peso,Long,xlim=c(140,200))
plot(Peso,Long)
plot(Long,Peso,ylab="Peso en gr", xlab="Longitud en mm")
set.seed(1)
x <- runif(100,40,120)
y <- runif(100,140,200)
y <- 110+.15*x + rnorm(100,0,2)
plot(x,y,ylab="y", xlab="y",pch=19,col="blue")
y <- 110-.15*x + rnorm(100,0,2)
plot(x,y,ylab="y", xlab="y",pch=19,col="blue")
par(mfrow=c(2,2))
plot(x,110+.23*x + rnorm(100,0,2),ylab="y", xlab="y",pch=19,col="blue")
plot(x,110-.15*x + rnorm(100,0,2),ylab="y", xlab="y",pch=19,col="blue")
plot(x,y + rnorm(100,0,2),ylab="y", xlab="y",pch=19,col="blue")
plot(x,y,ylab="y", xlab="y",pch=19,col="blue")
set.seed(1)
x <- runif(100,40,120)
y <- runif(100,85,120)
par(mfrow=c(2,2))
plot(x,110+.23*x + rnorm(100,0,2),ylab="y", xlab="y",pch=19,col="blue")
plot(x,110-.15*x + rnorm(100,0,2),ylab="y", xlab="y",pch=19,col="blue")
plot(x,y,ylab="y", xlab="y",pch=19,col="blue")
plot(rnorm(100),rnorm(100)^3)
plot(x,x^3)
plot(x,x^2)
x= rnorm(100)
plot(x,x^2)
plot(x,x^2 + rnorm(100))
x= rnorm(100,100,1)
plot(x,x^2+rnorm(100)),ylab="y", xlab="x",pch=19,col="blue")
plot(x,x^2+rnorm(100),ylab="y", xlab="x",pch=19,col="blue")
plot(x,x^2+rnorm(100,100,1),ylab="y", xlab="x",pch=19,col="blue")
x= rnorm(100,1)
plot(x,x^2+rnorm(100,1),ylab="y", xlab="x",pch=19,col="blue")
x= rnorm(100,1)
plot(x,x^2+rnorm(100,1),ylab="y", xlab="x",pch=19,col="blue")
x= rnorm(100,1)
plot(x,(x^2)+rnorm(100,1),ylab="y", xlab="x",pch=19,col="blue")
plot(x,(x^2)+rnorm(100,1),ylab="y", xlab="x",pch=19,col="blue")
x= rnorm(100,1)
plot(x,(x^2)+rnorm(100,1),ylab="y", xlab="x",pch=19,col="blue")
x= rnorm(100)
plot(x,(x^2)+rnorm(100,1),ylab="y", xlab="x",pch=19,col="blue")
kable(tornillos)
library(knitr)
kable(tornillos)
tornillos
apply(tornillos,2,sum)
apply(tornillos,1,sum)
apply(tornillos,2,sum)
f.j <- apply(tornillos,1,sum)
fi. <- apply(tornillos,2,sum)
tornillos[1,]/f.j
tornillos[1,]
tornillos[1,]/f.j[1]
tornillos[1,]/f.j[1]
tornillos[2,]/f.j[2]
tornillos[3,]/f.j[3]
rbind(tornillos[1,]/f.j[1],tornillos[2,]/f.j[2],tornillos[3,]/f.j[3])
do.call(tornillos/f.j)
tornillos[,1]
tab <- matrix(c(4,5,2,1),
c(2,5,4,2),
c(3,5,3,3),
c(2,4,4,1), byrow=TRUE,ncol=4)
matrix(c(4,5,2,1),
c(2,5,4,2),
c(3,5,3,3),
c(2,4,4,1), byrow=TRUE,ncol=4)
tab <- matrix(c(4,5,2,1,
2,5,4,2,
3,5,3,3,
2,4,4,1), byrow=TRUE,ncol=4)
tab
colnames(tab) <- c("0","1","2","3")
rownames(tab) <- c("0","1","2","3")
kable(tab)
tab <- matrix(c(4,5,2,1,
2,5,4,2,
3,5,3,3,
2,4,4,1), byrow=TRUE,ncol=4)
colnames(tab) <- c("0","1","2","3")
rownames(tab) <- c("0","1","2","3")
library(knitr)
kable(tab)
tab
table(tab)
tab <- as.table(tab)
tab
class(tab)
?table
require(stats) # for rpois and xtabs
## Simple frequency distribution
table(rpois(100, 5))
## Check the design:
with(warpbreaks, table(wool, tension))
table(state.division, state.region)
warpbreaks
head(warpbreaks)
state.division
?kable
xtable(tab)
require(xtable)
xtable(tab)
tex2markdown(textable)
kable(tab)
kable(tab)
?kable
kable(tab,format="latex")
tab
?tab
?as.tabke
?as.table
table(state.division, state.region)
nlevels(tab)
levels(tab)
xtable(tab)
xtable(tab,digits=1)
xtable(tab,digits=0)
11+19+13+7
12+13+14+11
19+26+21
13+2833
13+28+33
74/50
66/50
69*12
4*14
3*3*11
13+56+99
168/50 - 1.48^2
(168/50) - 1.48^2
4*13
9*7
19+52+63
134/50 - 1.32^2
(134/50) - 1.32^2
131.50
131.50 + 41*12
131.50 + (41*12)
(131.50 + (41*12))/2
475.8/6
475.8/7
475.8/8
239.85+235.85
239.85+235.95
475.8/6
install.packages("assist")
library(assist)
?snm
?horm.cort
horm.cort
data(horm.cort)
horm.cort
head(horm.cort)
library(lattice)
xyplot(conc~time|ID,data=horm.cort)
xyplot(conc~time|ID,group=type,data=horm.cort)
data("horm.cort")
nor <- horm.cort[horm.cort$type=='normal',]
norm.snm.fit <- snm(conc~b1+exp(b2)*f(time-alogit(b3)),
func=f(u)~list(periodic(u)),
data=nor, fixed=list(b1~1), random=list(b1+b2+b3~1),
start=c(mean(nor$conc)), groups=~ID, spar='m',method='ML')
summary(norm.snm.fit)
nor.grid <- data.frame(ID=rep(unique(nor$ID), rep(50,9)),
time= rep(seq(0,1,len=50),9))
nor.snm.p <- predict(norm.snm.fit)
xyplot(nor$conc + nor.snm.p~ nor$time |as.factor(nor$ID),
panel=panel.superpose,distribute.type=TRUE,type=c('p','l'),
col=c(1,2),lty=c(1,1),lwd=c(1.5),ylab='cortisol concentration on log scale',xlab='Time',
)
2/8324
(2/8324)+(27394-71379244)
(2/8324)+(27394/71379244)
?snm
?Bmm
require(PROreg)
?BBmm
?BBreg
?BBmm
90/6
library(fpca)
rmarkdown::shiny_prerendered_clean('Documents/github-test/courses/datahack/Modulo1/T1/tema1.Rpres')
history()
oops <- c(7,9,13)
rep(oops,3) # repite el vector "oops" 3 veces
rep(oops,1:3) # this function has the number 3 replaced
a <- c(1,2,3,4,NA)
na.omit(a)
x <- seq(1,100,by=2)
x
x <- seq(1,100,by=2)
x[x>60 & x<80]
duration.cut = cut(duration, breaks, right=FALSE)
data(faithful)
duration <- faithful$eruptions
range(duration)
breaks <- seq(1.5,5.5,by=0.5)
breaks
duration.cut = cut(duration, breaks, right=FALSE)
duration.cut
?cut
?gamm
?gam
rm(list=ls())
65.97*2
37.4*2
37.4*2.5
install.packages("oce")
library(devtools,quietly=TRUE)
install_github("MarkJBrewer/plateau",quiet=TRUE)
library(plateau,quietly=TRUE)
op <- par(no.readonly = TRUE)
par(mfrow = c(1,2), mar = c(3.2,3,0.5,1), mgp = c(2,1,0))
plot(0,0,xlim=c(-10,10),ylim=c(-10,10),type="n",
xlab="",ylab="",
yaxt="n",xaxt="n")
mtext("Linear Predictor",side=2,line=1,cex=1.1)
mtext("Climate Covariate",side=1,line=1,cex=1.1)
mtext(expression(beta[0]),side=2,line=0,cex=1.2)
lines(c(-10,-3),c(-10,0))
lines(c(-3,1),c(0,0))
lines(c(1,10),c(0,-10))
text(8,7,"(a)")
text(-8.4,-4,expression(paste(alpha[1],"+",beta[1],x)))
text(7.7,-4,expression(paste(alpha[2],"+",beta[2],x)))
text(1.5,2.7,expression(paste("(",a[x],",",a[z],")")))
abline(h=0,lty=3)
lines(c(-3,4),c(0,10),lty=2)
op <- par(no.readonly = TRUE)
par(mfrow = c(1,2), mar = c(3.2,3,0.5,1), mgp = c(2,1,0))
plot(0,0,xlim=c(-10,10),ylim=c(-10,10),type="n",
xlab="",ylab="",
yaxt="n",xaxt="n")
mtext("Linear Predictor",side=2,line=1,cex=1.1)
mtext("Climate Covariate",side=1,line=1,cex=1.1)
mtext(expression(beta[0]),side=2,line=0,cex=1.2)
lines(c(-10,-3),c(-10,0))
lines(c(-3,1),c(0,0))
lines(c(1,10),c(0,-10))
text(8,7,"(a)")
text(-8.4,-4,expression(paste(alpha[1],"+",beta[1],x)))
text(7.7,-4,expression(paste(alpha[2],"+",beta[2],x)))
text(1.5,2.7,expression(paste("(",a[x],",",a[z],")")))
abline(h=0,lty=3)
lines(c(-3,4),c(0,10),lty=2)
lines(c(1,-8),c(0,10),lty=2)
plot(0,0,xlim=c(-10,10),ylim=c(0,1),type="n",
xlab="",ylab="",yaxt="n",xaxt="n")
mtext("Climate Covariate",side=1,line=1,cex=1.1)
mtext("Response (Probability)",side=2,line=1,cex=1.1)
lines(c(-3,1),0.8*c(1,1))
xplot <- seq(-10,-3,length=1000)
lines(xplot,0.8*21/(1+exp(-xplot)))
xplot <- seq(1,10,length=1000)
lines(xplot,0.8*3.7/(1+exp(xplot)))
text(8,0.85,"(b)")
par(op)
dev.off()
plot(0,0,xlim=c(-10,10),ylim=c(0,1),type="n",
xlab="",ylab="",yaxt="n",xaxt="n")
mtext("Climate Covariate",side=1,line=1,cex=1.1)
mtext("Response (Probability)",side=2,line=1,cex=1.1)
lines(c(-3,1),0.8*c(1,1))
setwd("~/Documents/Research/= Leire/PlateauPaper-master")
source("dataload.R")
map.plot(inputs=AFEData[,species]==1,plot.type="Presence",coordinates=coords.list,
species.name=species.name)
map.plot
?map.plot
species <- "fagsyl"
source("dataload.R")
species.name <- "Fagus sylvatica" # fagsyl
map.plot(inputs=AFEData[,species]==1,plot.type="Presence",coordinates=coords.list,
species.name=species.name)
library(gamlss.dist)
SEP1()
curve(dSEP4(x, mu=5 ,sigma=1, nu=2, tau=1.5), -2, 10,
main = "The SEP4  density mu=5 ,sigma=1, nu=1, tau=1.5")
library(gamlss)
y<- rSEP4(100, mu=5, sigma=1, nu=2, tau=1.5);hist(y)
m1<-gamlss(y~1, family=SEP1, n.cyc=50)
m2<-gamlss(y~1, family=SEP2, n.cyc=50)
m3<-gamlss(y~1, family=SEP3, n.cyc=50)
m4<-gamlss(y~1, family=SEP4, n.cyc=50)
GAIC(m1,m2,m3,m4)
example(SEP1)
?SEP1
?termplot
data("stackloss")
?stackloss
mtcars
names(mtcars)
turbinas <- read.table("data/turbinas.txt")
setwd("~/Documents/github-test/courses/bcam-courses/datahack/Modulo1")
turbinas <- read.table("data/turbinas.txt")
turbinas <- read.table("data/turbinas.txt")
turbinas <- read.table("data/fisuras.txt")
turbinas <- read.table("data/fisuras.txt")
ex2<- lm(fisuras~horas,data=turbinas)
turbinas <- read.table("data/fisuras.txt",header=TRUE)
ex2<- lm(fisuras~horas,data=turbinas)
turbinas <- read.table("data/fisuras.txt",header=TRUE)
turbinas
ex2<- lm(fisuras~horas,data=turbinas)
ex2
ex2$fitted
plot(turbinas,type="h"); points(turbinas,cex=.6,pch=19)
abline(ex2,col=2,lwd=2)
ex3 <- glm(fisuras ~ horas,data=turbinas)
ex3 <- glm(fisuras ~ horas,data=turbinas, family = "Poisson")
ex3 <- glm(fisuras ~ horas,data=turbinas, family = "poisson")
ex3
fitted(ex3)
plot(turbinas,type="h"); points(turbinas,cex=.6,pch=19)
abline(ex3,col=2,lwd=2)
plot(turbinas,type="h"); points(turbinas,cex=.6,pch=19)
abline(fitted(ex3),col=2,lwd=2)
plot(turbinas,type="h"); points(turbinas,cex=.6,pch=19)
abline(predict(ex3),col=2,lwd=2)
predict(ex3)
fitted(ex3,"response")
fitted(ex3)
plot(fitted(ex3))
plot(turbinas$horas,fitted(ex3))
plot(turbinas,type="h"); points(turbinas,cex=.6,pch=19)
lines(turbinas$horas,fitted(ex3))
plot(turbinas,type="h"); points(turbinas,cex=.6,pch=19)
abline(glm(fisuras ~ horas,data=turbinas, family = "poisson"))
setwd("~/Documents/github-test/courses/bcam-courses/datahack/Modulo1")
turbinas <- read.table("/data/fisuras.txt",header = TRUE)
turbinas <- read.table("data/fisuras.txt",header = TRUE)
turbinas <- read.table("fisuras.txt",header = TRUE)
getwd()
turbinas <- read.table("data/fisuras.txt",header = TRUE)
data("plasma", package = "HSAUR")
?plasma
require(HSAUR)
?plasma
plasma
plogis
?plogis
inputData <- read.csv("data/adult.csv")
head(inputData)
table(inputData$ABOVE50K)
137.76+73.99
require(shiny)
?shinyUI
